---
id: ISO/IECTS21425-2017
type: standard
schema_version: v1.4.1
title:
- language: en
  script: Latn
  content: Programming languages
  type: title-intro
  format: text/plain
- language: en
  script: Latn
  content: C++ Extensions for ranges
  type: title-main
  format: text/plain
- language: en
  script: Latn
  content: Programming languages - C++ Extensions for ranges
  type: main
  format: text/plain
- language: fr
  script: Latn
  content: Langages de programmation
  type: title-intro
  format: text/plain
- language: fr
  script: Latn
  content: Extensions C++ pour les «ranges»
  type: title-main
  format: text/plain
- language: fr
  script: Latn
  content: Langages de programmation - Extensions C++ pour les «ranges»
  type: main
  format: text/plain
source:
- type: src
  content: https://www.iso.org/standard/70910.html
- type: rss
  content: https://www.iso.org/contents/data/standard/07/09/70910.detail.rss
docidentifier:
- content: ISO/IEC TS 21425:2017
  type: ISO
  primary: true
- content: ISO/IEC TS 21425:2017(E)
  type: iso-reference
- content: urn:iso:std:iso-iec:ts:21425:stage-95.99
  type: URN
docnumber: '21425'
date:
- type: published
  at: 2017-11
contributor:
- role:
  - type: publisher
  organization:
    uri:
    - content: www.iso.org
    name:
    - content: International Organization for Standardization
    abbreviation:
      content: ISO
- role:
  - type: publisher
  organization:
    uri:
    - content: www.iec.ch
    name:
    - content: International Electrotechnical Commission
    abbreviation:
      content: IEC
edition:
  content: '1'
language:
- en
- fr
script:
- Latn
abstract:
- language: en
  script: Latn
  content: |-
    ISO/IEC TS 21425:2017 describes extensions to the C++ Programming Language (2) that permit operations on ranges of data. These extensions include changes and additions to the existing library facilities as well as the extension of one core language facility. In particular, changes and extensions to the Standard Library include:
    - The formulation of the foundational and iterator concept requirements using the syntax of the Concepts
    TS (2).
    - Analogues of the Standard Library algorithms specified in terms of the new concepts.
    - The loosening of the algorithm constraints to permit the use of sentinels to denote the end of a range
    and corresponding changes to algorithm return types where necessary.
    - The addition of new concepts describing range and view abstractions; that is, objects with a begin
    iterator and an end sentinel.
    - New algorithm overloads that take range objects.
    - Support of callable objects (as opposed to function objects) passed as arguments to the algorithms.
    - The addition of optional projection arguments to the algorithms to permit on-the-fly data transforma-
    tions.
    - Analogues of the iterator primitives and new primitives in support of the addition of sentinels to the
    library.
    - Constrained analogues of the standard iterator adaptors and stream iterators that satisfy the new iterator concepts.
    - New iterator adaptors (counted_iterator and common_iterator) and sentinels (unreachable).
    Changes to the core language include:
    - the extension of the range-based for statement to support the new iterator range requirements (10.4).
    ISO/IEC TS 21425:2017 does not specify constrained analogues of other parts of the Standard Library (e.g., the numeric algorithms), nor does it add range support to all the places that could benefit from it (e.g., the containers).
    ISO/IEC TS 21425:2017 does not specify any new range views, actions, or facade or adaptor utilities; all are left as future work.
- language: fr
  script: Latn
  content: |-
    ISO/IEC TS 21425:2017 describes extensions to the C++ Programming Language (2) that permit operations on ranges of data. These extensions include changes and additions to the existing library facilities as well as the extension of one core language facility. In particular, changes and extensions to the Standard Library include:
    - The formulation of the foundational and iterator concept requirements using the syntax of the Concepts
    TS (2).
    - Analogues of the Standard Library algorithms specified in terms of the new concepts.
    - The loosening of the algorithm constraints to permit the use of sentinels to denote the end of a range
    and corresponding changes to algorithm return types where necessary.
    - The addition of new concepts describing range and view abstractions; that is, objects with a begin
    iterator and an end sentinel.
    - New algorithm overloads that take range objects.
    - Support of callable objects (as opposed to function objects) passed as arguments to the algorithms.
    - The addition of optional projection arguments to the algorithms to permit on-the-fly data transforma-
    tions.
    - Analogues of the iterator primitives and new primitives in support of the addition of sentinels to the
    library.
    - Constrained analogues of the standard iterator adaptors and stream iterators that satisfy the new iterator concepts.
    - New iterator adaptors (counted_iterator and common_iterator) and sentinels (unreachable).
    Changes to the core language include:
    - the extension of the range-based for statement to support the new iterator range requirements (10.4).
    ISO/IEC TS 21425:2017 does not specify constrained analogues of other parts of the Standard Library (e.g., the numeric algorithms), nor does it add range support to all the places that could benefit from it (e.g., the containers).
    ISO/IEC TS 21425:2017 does not specify any new range views, actions, or facade or adaptor utilities; all are left as future work.
status:
  stage:
    content: '95'
  substage:
    content: '99'
copyright:
- from: '2017'
  owner:
  - organization:
      name:
      - content: ISO/IEC
place:
- formatted_place: Geneva
ext:
  schema_version: v1.0.5
  doctype:
    content: technical-specification
  flavor: iso
  editorialgroup:
    technical_committee:
    - number: 1
      type: IEC
      identifier: ISO/IEC JTC 1/SC 22
      content: Programming languages, their environments and system software interfaces
  ics:
  - code: '35.060'
    text: Languages used in information technology
  structuredidentifier:
    type: ISO
    project_number:
      content: '70910'
